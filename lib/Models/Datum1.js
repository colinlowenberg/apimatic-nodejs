/**
 * DispatchDisgoAPILib
 *
 * This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ).
 */

'use strict';

const BaseModel = require('./BaseModel');

/**
 * Creates an instance of Datum1
 */
class Datum1 extends BaseModel {
    /**
     * @constructor
     * @param   {Object}  obj    The object passed to constructor
     */
    constructor(obj) {
        super(obj);
        if (obj === undefined || obj === null) return;
        this.hash = this.constructor.getValue(obj.hash);
        this.type = this.constructor.getValue(obj.type);
        this.from = this.constructor.getValue(obj.from);
        this.to = this.constructor.getValue(obj.to);
        this.value = this.constructor.getValue(obj.value);
        this.abi = this.constructor.getValue(obj.abi);
        this.time = this.constructor.getValue(obj.time);
        this.signature = this.constructor.getValue(obj.signature);
        this.hertz = this.constructor.getValue(obj.hertz);
        this.receipt = this.constructor.getValue(obj.receipt);
        this.code = this.constructor.getValue(obj.code);
        this.method = this.constructor.getValue(obj.method);
        this.params = this.constructor.getValue(obj.params);
    }

    /**
     * Function containing information about the fields of this model
     * @return   {array}   Array of objects containing information about the fields
     */
    static mappingInfo() {
        return super.mappingInfo().concat([
            { name: 'hash', realName: 'hash' },
            { name: 'type', realName: 'type' },
            { name: 'from', realName: 'from' },
            { name: 'to', realName: 'to' },
            { name: 'value', realName: 'value' },
            { name: 'abi', realName: 'abi' },
            { name: 'time', realName: 'time' },
            { name: 'signature', realName: 'signature' },
            { name: 'hertz', realName: 'hertz' },
            { name: 'receipt', realName: 'receipt', type: 'Receipt' },
            { name: 'code', realName: 'code' },
            { name: 'method', realName: 'method' },
            { name: 'params', realName: 'params', array: true },
        ]);
    }

    /**
     * Function containing information about discriminator values
     * mapped with their corresponding model class names
     *
     * @return   {object}  Object containing Key-Value pairs mapping discriminator
     *                     values with their corresponding model classes
     */
    static discriminatorMap() {
        return {};
    }
}

module.exports = Datum1;
