/**
 * DispatchDisgoAPILib
 *
 * This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ).
 */

'use strict';

const chai = require('chai');
const assert = chai.assert;
const TestHelper = require("../TestHelper");
const APIHelper = require("../../lib/APIHelper");
const testerlib = require("../../lib");
const testConfiguration = require("../TestBootstrap");

const controller = testerlib.DelegatesController;
const ListDelegatesResponse = testerlib.ListDelegatesResponse;

describe("DelegatesController Tests", function tests() {
    this.timeout(testConfiguration.TEST_TIMEOUT);

    /**
     * This URL / API call will return a list of all delegates on the Dispatch network. 


#### Example request
```shell
curl 'http://seed.dispatchlabs.io:1975/v1/delegates'
```
#### Example response
```shell
{
    "status": "Ok",
    "humanReadableStatus": "Ok",
    "data": [
        {
            "address": "{{address}}",
            "grpcEndpoint": {
                "host": "35.203.147.207",
                "port": 1973
            },
            "httpEndpoint": {
                "host": "35.203.147.207",
                "port": 1975
            },
            "type": "Delegate"
        },
    ..... ],
    "created": "2018-09-05T22:30:28.845499275Z"
}
```
     */
    it("should testListDelegates response", function testListDelegatesTest(done) {
        controller.listDelegates(function callback(error, response, context) {
            // test response code
            assert.equal(200, context.response.statusCode);
            // test headers
            let headers = [];
            headers['Content-Length'] = null;
            headers['Content-Type'] = null;
            headers['Date'] = null;
            headers['Vary'] = null;
            assert.isTrue(TestHelper.areHeadersProperSubsetOf(headers, context.response.headers, true));
            assert.isNotNull(response);
            assert.equal('{"status":"Ok","humanReadableStatus":"Ok","data":[{"address":"dea18bfabd1ebb0e2249652031a0f7c12c5f09ed","grpcEndpoint":{"host":"35.230.19.149","port":1973},"httpEndpoint":{"host":"35.230.19.149","port":1975},"type":"Delegate"},{"address":"fbaadf32f8fc1d33eed36e4125d4926b65cf6085","grpcEndpoint":{"host":"35.203.147.207","port":1973},"httpEndpoint":{"host":"35.203.147.207","port":1975},"type":"Delegate"},{"address":"c919d749b1af9a1e606ff0ff082f230c6ceef986","grpcEndpoint":{"host":"104.198.6.12","port":1973},"httpEndpoint":{"host":"104.198.6.12","port":1975},"type":"Delegate"},{"address":"4fe151d2a963b6d962cd26f132ae420a901be2a6","grpcEndpoint":{"host":"35.185.224.243","port":1973},"httpEndpoint":{"host":"35.185.224.243","port":1975},"type":"Delegate"},{"address":"61f93e079669e5f0845bad36c77fdf29446c7f6d","grpcEndpoint":{"host":"35.233.190.183","port":1973},"httpEndpoint":{"host":"35.233.190.183","port":1975},"type":"Delegate"}],"created":"2018-09-10T18:43:31.438813496Z"}', context.response.body);
            done();
        });
    });
});
